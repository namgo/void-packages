From d083efb4ab45275940c02bc72e23d334fe596fe7 Mon Sep 17 00:00:00 2001
From: Justin Kinnaird <jkinnaird1991@gmail.com>
Date: Sun, 17 Nov 2019 11:35:21 -0600
Subject: [PATCH 1/2] feat: do resource lookups in standard directories

For Linux, this includes the following directories:
* <HOME>/.local/share/<APPNAME>
* /usr/local/share/<APPNAME>
* /usr/share/<APPNAME>
---
 es-core/src/resources/ResourceManager.cpp | 18 ++++++++++++++++++

diff --git a/es-core/src/resources/ResourceManager.cpp b/es-core/src/resources/ResourceManager.cpp
index 9f5014e432..7fd54acea5 100644
--- a/es-core/src/resources/ResourceManager.cpp
+++ b/es-core/src/resources/ResourceManager.cpp
@@ -3,6 +3,10 @@
 #include "utils/FileSystemUtil.h"
 #include <fstream>
 
+#ifndef APPDATANAME
+#define APPDATANAME "EmulationStation"
+#endif
+
 auto array_deleter = [](unsigned char* p) { delete[] p; };
 auto nop_deleter = [](unsigned char* /*p*/) { };
 
@@ -27,6 +31,20 @@ std::string ResourceManager::getResourcePath(const std::string& path) const
 	{
 		std::string test;
 
+		// check in standard AppData locations
+#if defined(__linux__)
+		test = Utils::FileSystem::getHomePath() + "/.local/share/" + APPDATANAME + "/resources/" + &path[2];
+		if (Utils::FileSystem::exists(test))
+			return test;
+
+		test = std::string("/usr/local/share/") + APPDATANAME + "/resources/" + &path[2];
+		if (Utils::FileSystem::exists(test))
+			return test;
+
+		test = std::string("/usr/share/") + APPDATANAME + "/resources/" + &path[2];
+		if (Utils::FileSystem::exists(test))
+			return test;
+#endif
 		// check in homepath
 		test = Utils::FileSystem::getHomePath() + "/.emulationstation/resources/" + &path[2];
 		if(Utils::FileSystem::exists(test))


